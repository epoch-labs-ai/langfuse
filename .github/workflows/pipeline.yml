name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  merge_group:
  pull_request:
    branches:
      - "main"

jobs:
  push-docker-image:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    runs-on: self-hosted
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      NEXTAUTH_SECRET: "secret"
      SALT: "salt"
      NEXTAUTH_URL: "http://localhost:3030"
      REGISTRY: 596460412103.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_NAME: langfuse
      AWS_REGION: us-east-1
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-push
        run: |
          docker-compose -f docker-compose.build.yml build
          docker tag langfuse-langfuse-server 596460412103.dkr.ecr.us-east-1.amazonaws.com/langfuse:main
          docker push 596460412103.dkr.ecr.us-east-1.amazonaws.com/langfuse:main
      - name: Remove untagged images from ECR
        run: |
          # Check if AWS CLI is correctly installed and configured
          if ! aws --version; then
            echo "AWS CLI is not installed or not in PATH."
            exit 1
          fi
          echo "Fetching untagged images from $IMAGE_NAME..."

          # Get the untagged image digests
          UNTAGGED_IMAGES=$(aws ecr list-images --repository-name $IMAGE_NAME --filter tagStatus=UNTAGGED --query 'imageIds[*].imageDigest' --output text)

          for digest in $UNTAGGED_IMAGES; do
            echo "Deleting image with digest $digest..."
            aws ecr batch-delete-image --repository-name $IMAGE_NAME --image-ids imageDigest=$digest
          done
